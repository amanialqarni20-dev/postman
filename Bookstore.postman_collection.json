{
	"info": {
		"_postman_id": "39e12f6e-766b-4b36-80d6-5c77f53f9a0a",
		"name": "Bookstore",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "49217436",
		"_collection_link": "https://amanialqarni20-1649239.postman.co/workspace/Amani-AlQarni's-Workspace~a4019933-a8e4-4b32-85d5-deab14dbe973/collection/49217436-39e12f6e-766b-4b36-80d6-5c77f53f9a0a?action=share&source=collection_link&creator=49217436"
	},
	"item": [
		{
			"name": "CreateUser",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let randomNum = Math.floor(Math.random() * 10000);\r",
							"pm.collectionVariables.set(\"username\", \"user\" + randomNum);\r",
							"pm.collectionVariables.set(\"password\", \"Pass@\" + randomNum + \"word\");\r",
							""
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"User created successfully\", () => {\r",
							"    pm.response.to.have.status(201);\r",
							"    let data = pm.response.json();\r",
							"    pm.collectionVariables.set(\"userId\", data.userID);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"userName\": \"{{username}}\",\r\n  \"password\": \"{{password}}\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/Account/v1/User",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"Account",
						"v1",
						"User"
					]
				}
			},
			"response": []
		},
		{
			"name": "AssignBookstoUser",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.sendRequest({",
							"    url: pm.variables.replaceIn(\"{{baseUrl}}/BookStore/v1/Books\"),",
							"    method: \"GET\",",
							"    header: {",
							"        \"Accept\": \"application/json\"",
							"    }",
							"}, function (err, res) {",
							"    if (err) {",
							"        console.error(\"Error fetching books:\", err);",
							"        return;",
							"    }",
							"    let json;",
							"    try {",
							"        json = res.json();",
							"    } catch (e) {",
							"        console.error(\"Response is not valid JSON:\", e);",
							"        return;",
							"    }",
							"    if (json && Array.isArray(json.books) && json.books.length > 0) {",
							"        pm.collectionVariables.set(\"bookISBN\", json.books[0].isbn);",
							"    } else {",
							"        console.error(\"No books found in response.\");",
							"    }",
							"});"
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Book assigned to user\", () => {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "Basic {{base64Creds}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"userId\": \"{{userId}}\",\r\n  \"collectionOfIsbns\": [\r\n    { \"isbn\": \"{{bookISBN}}\" }\r\n  ]\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/BookStore/v1/Books",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"BookStore",
						"v1",
						"Books"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetAllBooks",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Books list retrieved\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"    let data = pm.response.json();\r",
							"    pm.expect(data.books.length).to.be.above(0);\r",
							"    pm.collectionVariables.set(\"bookISBN\", data.books[0].isbn);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/BookStore/v1/Books",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"BookStore",
						"v1",
						"Books"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetUserInfoandAssert",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Books list retrieved\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"    let data = pm.response.json();\r",
							"    pm.expect(data.books.length).to.be.above(0);\r",
							"    pm.collectionVariables.set(\"bookISBN\", data.books[0].isbn);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/Account/v1/User/{{userId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"Account",
						"v1",
						"User",
						"{{userId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetUserInfoandAssert",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let creds = pm.collectionVariables.get(\"username\") + \":\" + pm.collectionVariables.get(\"password\");\r",
							"let encoded = btoa(creds);\r",
							"pm.collectionVariables.set(\"base64Creds\", encoded);\r",
							""
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"User info retrieved\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"    let data = pm.response.json();\r",
							"    pm.expect(data.userName).to.eql(pm.collectionVariables.get(\"username\"));\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "Basic {{base64Creds}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/Account/v1/User/{{userId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"Account",
						"v1",
						"User",
						"{{userId}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"requests": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"requests": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": ""
		},
		{
			"key": "userId",
			"value": ""
		},
		{
			"key": "username",
			"value": ""
		},
		{
			"key": "password",
			"value": ""
		},
		{
			"key": "bookISBN",
			"value": "",
			"type": "default"
		},
		{
			"key": "base64Creds",
			"value": "",
			"type": "default"
		}
	]
}